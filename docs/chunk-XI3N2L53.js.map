{
  "version": 3,
  "sources": ["src/app/features/website/leaderboards/single-leaderboard/single-leaderboard.component.ts", "src/app/features/website/leaderboards/single-leaderboard/single-leaderboard.component.html", "src/app/features/website/leaderboards/leaderboards.component.ts", "src/app/features/website/leaderboards/leaderboards.component.html", "src/app/features/website/website-routing.module.ts"],
  "sourcesContent": ["import {Component, Input, OnInit, Pipe} from '@angular/core';\nimport {Leaderboard} from \"../leaderboard\";\n\n\nlet colors:any = {\n  \"Salt\": \"rgba(0,60,255,0.50)\",\n  \"Sotcjiscjel\": \"rgba(255,221,0,0.50)\",\n  \"Vile\": \"rgba(0,0,0,0.50)\",\n  \"Somont\": \"rgba(37,195,0,0.50)\",\n  \"Surnins\": \"rgba(255,0,0,0.50)\",\n}\n\n@Pipe(\n  {\n    standalone: true,\n    name: \"decorateParticipants\"\n  }\n)\nexport class DecorateParticipantsPipe {\n  transform(participants: { player: string, points: number; jolly?:boolean }[]) {\n    return participants.map((participant, index) => {\n      return {\n        ...participant,\n        rank: index + 1\n      }\n    });\n  }\n}\n\n\n@Component({\n  selector: 'single-leaderboard',\n  templateUrl: './single-leaderboard.component.html',\n  styleUrl: './single-leaderboard.component.scss'\n})\nexport class SingleLeaderboardComponent implements OnInit {\n  ngOnInit(): void {\n    console.log(\"Leaderboard\", this.leaderboard)\n  }\n\n  @Input() leaderboard!: Leaderboard\n\n\n  protected readonly colors = colors;\n}\n\n", "<div class=\"w-full h-full flex-col flex gap-5\">\n\n  <div class=\"relative  w-full h-1/3 min-h-64 flex justify-around items-end px-4\">\n    @for (participant of leaderboard.getTopThree(); track participant; let index = $index) {\n      <div class=\"w-3/12 h-full flex flex-col justify-end items-center\">\n        <!--        <span class=\"material-icons-outlined text-3xl\">account_circle</span>-->\n        <span class=\"font-bold text-xl\">{{ participant.player }}</span>\n        <!--        <span class=\"text text-gray-500\"> {{ participant.points }}</span>-->\n        <div\n          [class]=\"{\n          'h-full': index === 0,\n          'h-1/2': index === 1,\n          'h-2/6': index === 2\n          }\"\n          class=\"text-center\n           font-bold text-4xl\n           flex justify-center items-center bg-gray-500/30 w-full backdrop-blur  rounded-3xl\"\n        >\n          {{ index + 1 }}Â°\n        </div>\n      </div>\n    }\n\n  </div>\n  <div class=\"absolute z-10 overflow-scroll h-full w-full\">\n    <div class=\" relative rounded-2xl  mt-[80%] h-5/6  overflow-hidden  backdrop-blur\n    drop-shadow-2xl\n    w-full bg-white/30 flex flex-col justify-start items-center\">\n      <div\n        class=\"w-1/5 absolute top-2 border-4 border-gray-500 rounded-2xl mb-2 \"\n      >\n      </div>\n      @for (participant of leaderboard.participants | decorateParticipants; track participant) {\n        <div\n          [style]=\"{'background-image': 'linear-gradient(to right, ' + colors[participant.player] + ', transparent 80%'} \"\n\n          class=\"flex  p-3 pb-5 gap-4 h-1/6 w-full \"\n        >\n          <span class=\"w-1/12 flex items-center  text-3xl\"> {{ participant.rank }}</span>\n          <div class=\" w-2/12 text-2xl font-bold flex flex-col justify-center\">\n            <span class=\"\">{{ participant.player }}</span>\n          </div>\n          <div class=\"flex items-center justify-end grow gap-2 \">\n            @if (participant.jolly) {\n              <img class=\"h-4 aspect-square\" src=\"assets/images/joker-hat-svgrepo-com.svg\">\n            }\n            <span class=\" text-xl flex items-center\">{{ participant.points }} </span>\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n</div>\n", "import {Component, OnInit} from '@angular/core';\nimport * as scores from '../../../../assets/data/scores.json';\nimport {Leaderboard} from \"./leaderboard\";\n\n\n\nlet colors:any = {\n  \"Salt\": \"rgba(0,60,255,0.50)\",\n  \"Sotcjiscjel\": \"rgba(255,221,0,0.50)\",\n  \"Vile\": \"rgba(0,0,0,0.50)\",\n  \"Somont\": \"rgba(37,195,0,0.50)\",\n  \"Surnins\": \"rgba(255,0,0,0.50)\",\n}\n\n@Component({\n  selector: 'app-leaderboard',\n\n  templateUrl: './leaderboards.component.html',\n  styleUrl: './leaderboards.component.scss'\n})\nexport class LeaderboardsComponent implements OnInit{\n\n  ngOnInit(): void {\n  }\n\n\n\n  protected readonly scores = scores;\n  protected readonly Leaderboard = Leaderboard;\n  public readonly colors = colors;\n}\n\n", "<div class=\"w-full relative h-full overflow-hidden flex flex-col items-center gap-5\">\n  <p class=\"text-3xl font-bold p-2\">CLASSIFICA</p>\n\n  <single-leaderboard\n\n    class=\"w-full h-full\"\n    [leaderboard]=\"Leaderboard.fromScores(scores['global'])\"\n  ></single-leaderboard>\n</div>\n\n\n", "import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from \"@angular/core\";\nimport {GamesComponent} from \"./games/games.component\";\nimport {CalendarComponent} from \"./calendar/calendar.component\";\nimport {LeaderboardsComponent} from \"./leaderboards/leaderboards.component\";\n\nexport const routes: Routes = [\n  {\n    path: '',\n    data: {\n      // sidenav: 'none',\n    },\n\n    component: LeaderboardsComponent,\n  },\n  {\n    path: 'games',\n    loadChildren: () => import('./games/games-routing.module').then(m => m.GamesRoutingModule)\n  },\n  {\n    path: 'leaderboard',\n    component: LeaderboardsComponent\n  },\n  // {\n  //   'path': 'calendar',\n  //   component: CalendarComponent\n  // }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n  ],\n  exports: [RouterModule],\n})\nexport class WebsiteRoutingModule {\n}\n"],
  "mappings": "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",
  "names": ["colors"]
}
