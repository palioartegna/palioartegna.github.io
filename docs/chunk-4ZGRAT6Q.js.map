{
  "version": 3,
  "sources": ["src/assets/data/scores.json", "src/app/features/website/leaderboards/leaderboard.ts", "src/app/features/website/leaderboards/single-leaderboard/single-leaderboard.component.ts", "src/app/features/website/leaderboards/single-leaderboard/single-leaderboard.component.html", "src/app/features/website/leaderboards/leaderboards.component.ts", "src/app/features/website/leaderboards/leaderboards.component.html", "src/app/features/website/website-routing.module.ts"],
  "sourcesContent": ["{\n  \"global\": [\n    {\n      \"player\": \"Salt\",\n      \"points\": 61,\n      \"jolly\": true\n    },\n    {\n      \"player\": \"Sotcjiscjel\",\n      \"points\": 42,\n      \"jolly\": true\n    },\n    {\n      \"player\": \"Vile\",\n      \"points\": 33\n    },\n    {\n      \"player\": \"Somont\",\n      \"points\": 31\n    },\n    {\n      \"player\": \"Surnins\",\n      \"points\": 30\n    }\n  ],\n  \"game-scores\": {\n    \"Taglio del Ceppo Maschile\": [\n      {\n        \"player\": \"Sotcjiscjel\",\n        \"points\": 5\n      },\n      {\n        \"player\": \"Somont\",\n        \"points\": 7\n      },\n      {\n        \"player\": \"Salt\",\n        \"points\": 10,\n        \"jolly\": true\n      },\n      {\n        \"player\": \"Vile\",\n        \"points\": 3\n      },\n      {\n        \"player\": \"Surnins\",\n        \"points\": 1\n      }\n    ],\n    \"Taglio del Ceppo Femminile\": [\n      {\n        \"player\": \"Sotcjiscjel\",\n        \"points\": 5,\n        \"jolly\": true\n      },\n      {\n        \"player\": \"Somont\",\n        \"points\": 7\n      },\n      {\n        \"player\": \"Salt\",\n        \"points\": 10\n      },\n      {\n        \"player\": \"Vile\",\n        \"points\": 3\n      },\n      {\n        \"player\": \"Surnins\",\n        \"points\": 1\n      }\n    ],\n    \"Corsa coi Sacchi\": [\n      {\n        \"player\": \"Surnins\",\n        \"points\": 10\n      },\n      {\n        \"player\": \"Salt\",\n        \"points\": 7\n      },\n      {\n        \"player\": \"Sotcjiscjel\",\n        \"points\": 5\n      },\n      {\n        \"player\": \"Vile\",\n        \"points\": 3\n      },\n      {\n        \"player\": \"Somont\",\n        \"points\": 1\n      }\n    ],\n    \"Strade Mate\": [\n      {\n        \"player\": \"Vile\",\n        \"points\": 10\n      },\n      {\n        \"player\": \"Salt\",\n        \"points\": 7\n      },\n      {\n        \"player\": \"Surnins\",\n        \"points\": 5\n      },\n      {\n        \"player\": \"Somont\",\n        \"points\": 3\n      },\n      {\n        \"player\": \"Sotcjiscjel\",\n        \"points\": 1\n      }\n    ],\n    \"Staffetta\": [\n      {\n        \"player\": \"Sotcjiscjel\",\n        \"points\": 10\n      },\n      {\n        \"player\": \"Surnins\",\n        \"points\": 7\n      },\n      {\n        \"player\": \"Salt\",\n        \"points\": 5\n      },\n      {\n        \"player\": \"Vile\",\n        \"points\": 3\n      },\n      {\n        \"player\": \"Somont\",\n        \"points\": 1\n      }\n    ],\n    \"Cibb\u00E8\": [\n      {\n        \"player\": \"Vile\",\n        \"points\": 10\n      },\n      {\n        \"player\": \"Salt\",\n        \"points\": 7\n      },\n      {\n        \"player\": \"Somont\",\n        \"points\": 5\n      },\n      {\n        \"player\": \"Surnins\",\n        \"points\": 3\n      },\n      {\n        \"player\": \"Sotcjiscjel\",\n        \"points\": 1\n      }\n    ],\n    \"Bocce\": [\n      {\n        \"player\": \"Sotcjiscjel\",\n        \"points\": 10\n      },\n      {\n        \"player\": \"Somont\",\n        \"points\": 7\n      },\n      {\n        \"player\": \"Salt\",\n        \"points\": 5\n      },\n      {\n        \"player\": \"Surnins\",\n        \"points\": 3\n      },\n      {\n        \"player\": \"Vile\",\n        \"points\": 1\n      }\n    ]\n  }\n}\n", "export class Leaderboard{\n\n  static fromScores(scores: any){\n    return new Leaderboard(scores);\n  }\n\n  participants:{player: string, points: number; jolly?:boolean}[];\n  constructor(participants: {player: string, points: number, jolly: boolean}[]){\n    this.participants = participants;\n  }\n  getTopThree(){\n    return this.participants\n      .sort((a, b) => b.points - a.points)\n      .slice(0, 3);\n  }\n\n  getWinner(){\n    return this.participants\n      .sort((a, b) => b.points - a.points)[0];\n  }\n\n  getSortedParticipants(){\n    return this.participants\n      .sort((a, b) => b.points)\n  }\n\n\n}\n", "import {Component, Input, OnInit, Pipe} from '@angular/core';\nimport {Leaderboard} from \"../leaderboard\";\n\n\nlet colors:any = {\n  \"Salt\": \"rgba(0,60,255,0.50)\",\n  \"Sotcjiscjel\": \"rgba(255,221,0,0.50)\",\n  \"Vile\": \"rgba(0,0,0,0.50)\",\n  \"Somont\": \"rgba(37,195,0,0.50)\",\n  \"Surnins\": \"rgba(255,0,0,0.50)\",\n}\n\n@Pipe(\n  {\n    standalone: true,\n    name: \"decorateParticipants\"\n  }\n)\nexport class DecorateParticipantsPipe {\n  transform(participants: { player: string, points: number; jolly?:boolean }[]) {\n    return participants.map((participant, index) => {\n      return {\n        ...participant,\n        rank: index + 1\n      }\n    });\n  }\n}\n\n\n@Component({\n  selector: 'single-leaderboard',\n  templateUrl: './single-leaderboard.component.html',\n  styleUrl: './single-leaderboard.component.scss'\n})\nexport class SingleLeaderboardComponent implements OnInit {\n  ngOnInit(): void {\n    console.log(\"Leaderboard\", this.leaderboard)\n  }\n\n  @Input() leaderboard!: Leaderboard\n\n\n  protected readonly colors = colors;\n}\n\n", "<div class=\"w-full h-full flex-col flex gap-5\">\n\n  <div class=\"relative  w-full h-1/3 min-h-64 flex justify-around items-end px-4\">\n    @for (participant of leaderboard.getTopThree(); track participant; let index = $index) {\n      <div class=\"w-3/12 h-full flex flex-col justify-end items-center\">\n        <!--        <span class=\"material-icons-outlined text-3xl\">account_circle</span>-->\n        <span class=\"font-bold text-xl\">{{ participant.player }}</span>\n        <!--        <span class=\"text text-gray-500\"> {{ participant.points }}</span>-->\n        <div\n          [class]=\"{\n          'h-full': index === 0,\n          'h-1/2': index === 1,\n          'h-2/6': index === 2\n          }\"\n          class=\"text-center\n           font-bold text-4xl\n           flex justify-center items-center bg-gray-500/30 w-full backdrop-blur  rounded-3xl\"\n        >\n          {{ index + 1 }}Â°\n        </div>\n      </div>\n    }\n\n  </div>\n  <div class=\"absolute z-10 overflow-scroll h-full w-full\">\n    <div class=\"rounded-2xl pt-2 mt-[80%] h-5/6 overflow-hidden  backdrop-blur\n    drop-shadow-2xl\n    w-full bg-white/30 flex flex-col justify-start items-center\">\n      <div\n        class=\"w-1/5 border-4 border-gray-500 rounded-2xl mb-2 \"\n      >\n      </div>\n      @for (participant of leaderboard.participants | decorateParticipants; track participant) {\n        <div\n          [style]=\"{'background-image': 'linear-gradient(to right, ' + colors[participant.player] + ', transparent 80%'} \"\n\n          class=\"flex  p-3 pb-5 gap-4 w-full \"\n        >\n          <span class=\"w-1/12 flex items-center  text-3xl\"> {{ participant.rank }}</span>\n          <div class=\" w-2/12 text-2xl font-bold flex flex-col justify-center\">\n            <span class=\"\">{{ participant.player }}</span>\n          </div>\n          <div class=\"flex items-center justify-end grow gap-2 \">\n            @if (participant.jolly) {\n              <img class=\"h-4 aspect-square\" src=\"assets/images/joker-hat-svgrepo-com.svg\">\n            }\n            <span class=\" text-xl flex items-center\">{{ participant.points }} </span>\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n</div>\n", "import {Component, OnInit} from '@angular/core';\nimport * as scores from '../../../../assets/data/scores.json';\nimport {Leaderboard} from \"./leaderboard\";\n\n\n\nlet colors:any = {\n  \"Salt\": \"rgba(0,60,255,0.50)\",\n  \"Sotcjiscjel\": \"rgba(255,221,0,0.50)\",\n  \"Vile\": \"rgba(0,0,0,0.50)\",\n  \"Somont\": \"rgba(37,195,0,0.50)\",\n  \"Surnins\": \"rgba(255,0,0,0.50)\",\n}\n\n@Component({\n  selector: 'app-leaderboard',\n\n  templateUrl: './leaderboards.component.html',\n  styleUrl: './leaderboards.component.scss'\n})\nexport class LeaderboardsComponent implements OnInit{\n\n  selectedLeaderboard:Leaderboard|null = Leaderboard.fromScores(scores['global']);\n  // selectedLeaderboard:Leaderboard|null = null\n  ngOnInit(): void {\n    for(let game of this.games){\n\n    }\n  }\n\n  get gameScores () {return scores['game-scores'] as any}\n  games = Object.keys(this.gameScores);\n\n  tab = 'global'\n\n\n  protected readonly scores = scores;\n  protected readonly Leaderboard = Leaderboard;\n  protected readonly colors = colors;\n}\n\n", "<div class=\"bg-gray-700 -z-10 fixed inset-0 w-full h-full\">\n\n</div>\n\n\n<div class=\"flex w-full h-full shrink-0 items-center justify-center\">\n\n  <div class=\"relative md:max-h-[800px] md:max-w-[390px]  w-full h-full\">\n\n    <div class=\"max-md:hidden absolute rounded-l bg-black w-1.5 h-20 -left-1.5 top-36\"></div>\n    <div class=\"max-md:hidden absolute rounded-l bg-black w-1.5 h-20 -left-1.5 top-60\"></div>\n    <div class=\"max-md:hidden absolute rounded-r bg-black w-1.5 h-28 -right-1.5 top-44\"></div>\n    <div\n      class=\"relative md:pt-5 bg-white md:border-[9px] md:border-black md:rounded-[50px] overflow-hidden w-full h-full \">\n      <img\n        class=\"absolute w-full h-full top-0 left-0 object-cover opacity-55\"\n        src=\"assets/images/Sfondo.jpg\"\n      >\n      <div class=\"w-full relative h-full overflow-hidden flex flex-col items-center gap-5\">\n        <p class=\"text-3xl font-bold p-2\">CLASSIFICA</p>\n        <div class=\"relative flex w-1/2 border border-gray-50 rounded-2xl p-0.5\">\n          <div class=\"w-1/2 duration-300 transition-all text-center h-full rounded-2xl\"\n               (click)=\"selectedLeaderboard = Leaderboard.fromScores(scores['global'])\"\n               [class]=\"{'bg-gray-50/80': selectedLeaderboard}\"\n          >\n            Globale\n          </div>\n          <div class=\"w-1/2 duration-300 transition-all text-center h-full rounded-2xl\"\n               (click)=\"selectedLeaderboard = null\"\n               [class]=\"{'bg-gray-50/80': !selectedLeaderboard}\"\n          >\n            Giochi\n          </div>\n        </div>\n\n        @if (selectedLeaderboard) {\n          <single-leaderboard\n\n            class=\"w-full h-full\"\n            [leaderboard]=\"selectedLeaderboard\"\n          ></single-leaderboard>\n        } @else {\n          <div class=\"flex-col flex gap-1 w-full overflow-scroll\">\n            @for (game of games; track game) {\n              <div class=\" w-full rounded-2xl p-5\"\n                   (click)=\"checkbox.checked = !checkbox.checked\"\n                   [style]=\"{'background-image': 'linear-gradient(to right, ' + colors[Leaderboard.fromScores(gameScores[game]).getWinner().player]  + ', transparent 95%'} \"\n              >\n                <input type=\"checkbox\" class=\"hidden\" #checkbox>\n                {{ game }}\n                @if (checkbox.checked) {\n                  <div class=\"flex justify-between w-full\">\n                    @for (participant of Leaderboard.fromScores(gameScores[game]).getSortedParticipants(); track participant; let index = $index) {\n                      <div class=\"flex flex-col items-center justify-center\">\n                        <span>{{ index + 1 }}Â°</span>\n                        <span>{{ participant.player }}</span>\n                      </div>\n                    }\n                  </div>\n                }\n              </div>\n            }\n\n          </div>\n\n        }\n      </div>\n\n    </div>\n\n  </div>\n</div>\n\n\n\n", "import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from \"@angular/core\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {GamesComponent} from \"./games/games.component\";\nimport {CalendarComponent} from \"./calendar/calendar.component\";\nimport {LeaderboardsComponent} from \"./leaderboards/leaderboards.component\";\n\nexport const routes: Routes = [\n  {\n    path: '',\n    data: {\n      sidenav: 'none',\n    },\n\n    component: LeaderboardsComponent,\n  },\n  // {\n  //   path: 'games',\n  //   component: GamesComponent\n  // },\n  // {\n  //   path: 'leaderboard',\n  //   component: LeaderboardsComponent\n  // },\n  // {\n  //   'path': 'calendar',\n  //   component: CalendarComponent\n  // }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n  ],\n  exports: [RouterModule],\n})\nexport class WebsiteRoutingModule {\n}\n"],
  "mappings": "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",
  "names": ["game-scores", "_c0", "colors", "game-scores", "_c1"]
}
